@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server and using of Custom Data Grid and Custom Modal</p>

<Modal @ref="@modal">
    <Title>Action</Title>
    <Body>
         <p>Delete selected item ?</p>
    </Body>
    <Footer>
        <button class="btn btn-danger btn-sm" type="button"  @onclick="() => modal.Close()">YES</button>
        <button class="btn btn-warning btn-sm" type="button" @onclick="() => modal.Close()">NO</button>
    </Footer>
</Modal>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{

@*    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>*@
    <Grid Items ="@forecasts" PageSize="3" HasEdit="true" HasDelete="true" OnDeleteRecord="OnDeleteRecord" OnEditRecord="OnEditRecord">
        <GridColumn TRowData="WeatherForecast" Expression="f => f.Date" Format="d"/>
        <GridColumn TRowData="WeatherForecast" Expression="f => f.TemperatureC"/>
        <GridColumn TRowData="WeatherForecast" Expression="f => f.TemperatureF"/>
        <GridColumn TRowData="WeatherForecast" Expression="f => f.Summary"/>
    </Grid>
}

@code {
    private Modal modal { get; set; }
    private List<WeatherForecast>? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<List<WeatherForecast>>("sample-data/weather.json");
    }

    private void OnDeleteRecord(object item)
    {
        modal.Open();
    }

    private void OnEditRecord(object item)
    {
        
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
